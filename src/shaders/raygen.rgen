#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable

layout(set = 0, binding = 0, rgba8) uniform image2D image;
layout(set = 0, binding = 1) uniform accelerationStructureEXT topLevelAS;

struct GPUCameraData {
    vec3 position;               float _pad0;
    vec3 topLeftViewportCorner; float _pad1;
    vec3 horizontalViewportDelta; float _pad2;
    vec3 verticalViewportDelta; float _pad3;
};

layout(set = 0, binding = 2) uniform CameraUBO {
    GPUCameraData cam;
};

layout(location = 0) rayPayloadEXT vec3 payload;

void main() {
    const ivec2 pixelCoord = ivec2(gl_LaunchIDEXT.xy);

    const vec3 pixelWorldPos =
        cam.topLeftViewportCorner +
        pixelCoord.x * cam.horizontalViewportDelta +
        pixelCoord.y * cam.verticalViewportDelta;

    const vec3 rayOrigin = cam.position;  //cam.position;
    const vec3 rayDirection = normalize(pixelWorldPos - rayOrigin);

    payload = vec3(0.0);

    traceRayEXT(
        topLevelAS,
        gl_RayFlagsOpaqueEXT,
        0xFF,
        0, 0, 0,
        rayOrigin, 0.001,
        rayDirection, 10000.0,
        0
    );

    imageStore(image, pixelCoord, vec4(payload.b, payload.g, payload.r, 1.0));
}
