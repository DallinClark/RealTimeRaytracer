// TOFIX: Add an actual shader this is hard-coded to be a single triangle in a hard-coded position

#version 460
#extension GL_EXT_ray_tracing : require

layout(location = 0) rayPayloadInEXT vec3 payload;

hitAttributeEXT vec2 attribs;

void main() {
    // A fixed triangle in world space
    vec3 v0 = vec3(0.25, 0.25, 0.5);
    vec3 v1 = vec3(0.75, 0.25, 0.5);
    vec3 v2 = vec3(0.5, 0.75, 0.5);

    vec3 orig = gl_WorldRayOriginEXT;
    vec3 dir  = gl_WorldRayDirectionEXT;

    // intersection test
    const float EPSILON = 0.00001;
    vec3 edge1 = v1 - v0;
    vec3 edge2 = v2 - v0;
    vec3 h = cross(dir, edge2);
    float a = dot(edge1, h);

    if (abs(a) < EPSILON)
        return;

    float f = 1.0 / a;
    vec3 s = orig - v0;
    float u = f * dot(s, h);
    if (u < 0.0 || u > 1.0)
        return;

    vec3 q = cross(s, edge1);
    float v = f * dot(dir, q);
    if (v < 0.0 || u + v > 1.0)
        return;

    float t = f * dot(edge2, q);
    if (t > 0.001) {
        reportIntersectionEXT(t, 0);
    }
}