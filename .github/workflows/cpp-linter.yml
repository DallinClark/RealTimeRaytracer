name: C++ Lint

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      # --- Install dependencies ---
      - name: Install dependencies
        run: |
          sudo apt-get update

          sudo apt-get install -y --no-install-recommends \
            clang-20 \
            clang++-20 \
            ninja-build \
            libvulkan-dev \
            libglfw3-dev \
            libglm-dev

      # --- Configure (generate compile_commands.json) ---
      - name: Configure with CMake
        run: cmake -B build -S . -G Ninja \
                -DCMAKE_C_COMPILER=clang-20 \
                -DCMAKE_CXX_COMPILER=clang++-20 \
                -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      # --- Run clang-format / clang-tidy ---
      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        with:
          style: file
          compile-commands: build/compile_commands.json
          thread-comments: update

      - name: Fail on remaining errors
        if: ${{ steps.linter.outputs.errors != '0' }}
        run: exit 1
